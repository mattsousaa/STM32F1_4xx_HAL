#include "main.h"
#include <string.h>
#include <stdio.h>

UART_HandleTypeDef huart2;

void MX_USART2_UART_Init(void);
void Error_Handler(void);

char *msg_user = "The application is running\r\n";

int main(void){

	char msg[100];
	RCC_OscInitTypeDef osc_init;
	RCC_ClkInitTypeDef clk_init;

	HAL_Init();
	MX_USART2_UART_Init();

  	HAL_UART_Transmit(&huart2, (uint8_t*)msg_user, strlen(msg_user), HAL_MAX_DELAY);

  	memset(msg, 0, sizeof(msg));
  	sprintf(msg,"SYSCLK: %ldHz\r\n", HAL_RCC_GetSysClockFreq());
  	HAL_UART_Transmit(&huart2, (uint8_t*)msg, strlen(msg), HAL_MAX_DELAY);

  	memset(msg, 0, sizeof(msg));
  	sprintf(msg, "HCLK: %ldHz\r\n", HAL_RCC_GetHCLKFreq());
  	HAL_UART_Transmit(&huart2, (uint8_t*)msg, strlen(msg), HAL_MAX_DELAY);

  	memset(msg, 0, sizeof(msg));
  	sprintf(msg,"PCLK1: %ldHz\r\n", HAL_RCC_GetPCLK1Freq());
  	HAL_UART_Transmit(&huart2, (uint8_t*)msg, strlen(msg), HAL_MAX_DELAY);

  	memset(msg,0,sizeof(msg));
  	sprintf(msg, "PCLK2: %ldHz\r\n", HAL_RCC_GetPCLK2Freq());
  	HAL_UART_Transmit(&huart2, (uint8_t*)msg, strlen(msg), HAL_MAX_DELAY);

  	while(1);

  	return 0;

}

void MX_USART2_UART_Init(void){

	huart2.Instance = USART2;
	huart2.Init.BaudRate = 115200;
	huart2.Init.WordLength = UART_WORDLENGTH_8B;
	huart2.Init.StopBits = UART_STOPBITS_1;
	huart2.Init.Parity = UART_PARITY_NONE;
	huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
	huart2.Init.Mode = UART_MODE_TX;

	if(HAL_UART_Init(&huart2) != HAL_OK){
		//There is a problem
		Error_Handler();
	}
}


void Error_Handler(void){
	while(1);
}


